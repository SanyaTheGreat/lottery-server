import { supabase } from '../../services/supabaseClient.js';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å —Ç–∞–∫–∏–º tx_hash
const isTxProcessed = async (tx_hash) => {
  const { data, error } = await supabase
    .from('sells')
    .select('id')
    .eq('tx_hash', tx_hash)
    .single();

  if (error) {
    // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Äî –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞ "–∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    if (error.code === 'PGRST116') {
      return false; // —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∑–Ω–∞—á–∏—Ç –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
    }
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', error.message);
    return false;
  }

  return !!data; // true, –µ—Å–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–∂–µ –µ—Å—Ç—å
};

const handleTransaction = async (telegram_id, amountTON, tx_hash) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –ª–∏ —É–∂–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
  if (await isTxProcessed(tx_hash)) {
    console.log(`–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${tx_hash} —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ`);
    return;
  }

  const { data: userData, error: userError } = await supabase
    .from('users')
    .select('*')
    .eq('telegram_id', telegram_id)
    .single();

  if (userError || !userData) {
    console.error('‚ùå User not found for telegram_id:', telegram_id);
    return;
  }

  const quantity = amountTON;
  const newTicketCount = userData.tickets + quantity;
  const updates = { tickets: newTicketCount };

  const { error: updateError } = await supabase
    .from('users')
    .update(updates)
    .eq('telegram_id', telegram_id);

  if (updateError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', updateError.message);
    return;
  }

  const { error: insertError } = await supabase.from('sells').insert([{
    telegram_id,
    wallet: userData.wallet,
    amount: quantity,
    tx_hash: tx_hash,
  }]);

  if (insertError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ–¥–∞–∂–∏:', insertError.message);
    return;
  }

  console.log(`üéü –ë–∏–ª–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${telegram_id}`);
};

export default handleTransaction;
