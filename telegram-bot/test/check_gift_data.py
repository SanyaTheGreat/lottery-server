from pyrogram import Client
from pyrogram.raw.functions.payments import GetSavedStarGifts
from pyrogram.raw.types import InputPeerSelf
from supabase import create_client, Client as SupabaseClient
import os

# Supabase init
SUPABASE_URL = os.getenv("SUPABASE_URL", "https://djpcftyqkwucbksknsdu.supabase.co")
SUPABASE_KEY = os.getenv("SUPABASE_KEY", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRqcGNmdHlxa3d1Y2Jrc2tuc2R1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ2NzE4ODIsImV4cCI6MjA2MDI0Nzg4Mn0.SNI196TucjsepnXIkZDgGwRv7J5chYE9KN6gBx5BszA")
supabase: SupabaseClient = create_client(SUPABASE_URL, SUPABASE_KEY)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –∫–ª–∏–µ–Ω—Ç–∞
app = Client("storage_account")

async def check_gift_data():
    # –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞
    await app.start()

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏
        result = await app.invoke(GetSavedStarGifts(
            peer=InputPeerSelf(),  # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–∞—Ä–∫–∏ –¥–ª—è —Å–∞–º–æ–≥–æ —Å–µ–±—è (–∞–∫–∫–∞—É–Ω—Ç-—Ö—Ä–∞–Ω–∏–ª–∏—â–µ)
            offset="",
            limit=1000,
            exclude_unsaved=True,
            exclude_saved=False,
            exclude_unlimited=False,
            exclude_limited=False,
            exclude_unique=False,
            sort_by_value=True
        ))

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–¥–∞—Ä–∫–∏
        gifts = getattr(result, "gifts", [])
        if not gifts:
            print("üì≠ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤.")
        else:
            print(f"üéÅ –ù–∞–π–¥–µ–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤: {len(gifts)}\n")

            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –ø–æ–¥–∞—Ä–∫–µ
            for g in gifts:
                gift = getattr(g, "gift", None)
                if gift:
                    gift_id = getattr(gift, "id", None)
                    title = getattr(gift, "title", None)
                    slug = getattr(gift, "slug", None)
                    stars = getattr(gift, "transfer_stars", None)

                    # –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–æ–≤
                    print(f"üéÅ –ü–æ–¥–∞—Ä–æ–∫ ID: {gift_id}, –ù–∞–∑–≤–∞–Ω–∏–µ: {title}, Slug: {slug}, –ó–≤–µ–∑–¥—ã: {stars}")

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (—Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å available_gifts)
                    exists = supabase.table("available_gifts").select("nft_number").eq("nft_number", gift_id).execute()
                    if exists.data:
                        print(f"‚úÖ –ü–æ–¥–∞—Ä–æ–∫ {gift_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
                    else:
                        print(f"‚ùå –ü–æ–¥–∞—Ä–æ–∫ {gift_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–¥–∞—Ä–∫–∞—Ö: {e}")

    await app.stop()

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
import asyncio
asyncio.get_event_loop().run_until_complete(check_gift_data())
