import os
import sys
import asyncio
from datetime import datetime
from pyrogram import Client
from supabase import create_client, Client as SupabaseClient

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º stdout, —á—Ç–æ–±—ã Render –ø–æ–∫–∞–∑—ã–≤–∞–ª –ª–æ–≥–∏ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
sys.stdout.flush()

# üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
api_id = int(os.getenv("api_id"))
api_hash = os.getenv("api_hash")
session_name = "account"

# Supabase init
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")
supabase: SupabaseClient = create_client(SUPABASE_URL, SUPABASE_KEY)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –∫–ª–∏–µ–Ω—Ç–∞
app = Client(session_name, api_id, api_hash)

async def send_pending_gifts():
    print("üü¢ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω ‚Äî –¥–æ await app.start()", flush=True)

    await app.start()

    print("üì§ –ü–æ—Å–ª–µ app.start(): –∫–ª–∏–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω", flush=True)

    while True:
        print("üîÑ –ù–æ–≤—ã–π –∫—Ä—É–≥ –ø—Ä–æ–≤–µ—Ä–∫–∏ pending_rewards...", flush=True)
        response = supabase.table("pending_rewards").select("msg_id, telegram_id").eq("status", "pending").execute()
        pending = response.data

        if not pending:
            print("‚õî –ù–µ—Ç –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏", flush=True)

        for item in pending:
            msg_id = item["msg_id"]
            chat_id = item["telegram_id"]

            try:
                print(f"‚û°Ô∏è –ü—ã—Ç–∞—é—Å—å –ø–µ—Ä–µ–¥–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫: msg_id={msg_id}, chat_id={chat_id}", flush=True)
                await app.transfer_gift(owned_gift_id=str(msg_id), new_owner_chat_id=chat_id)
                print(f"‚úÖ –ü–æ–¥–∞—Ä–æ–∫ {msg_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}", flush=True)

                supabase.table("pending_rewards").update({
                    "status": "send",
                    "sent_at": datetime.utcnow().isoformat()
                }).eq("msg_id", msg_id).execute()

                supabase.table("available_gifts").update({"used": True}).eq("msg_id", msg_id).execute()
                print("üìù –°—Ç–∞—Ç—É—Å –∏ –æ—Ç–º–µ—Ç–∫–∞ used –æ–±–Ω–æ–≤–ª–µ–Ω—ã", flush=True)

            except Exception as e:
                if "PEER_ID_INVALID" in str(e):
                    print(f"‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –Ω–µ –ø–∏—Å–∞–ª –≤ –õ–°. –ü–æ–¥–∞—Ä–æ–∫ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.", flush=True)
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {msg_id} ‚Üí {chat_id}: {e}", flush=True)

        await asyncio.sleep(60)

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ event loop...", flush=True)
    loop = asyncio.get_event_loop()
    loop.run_until_complete(send_pending_gifts())
