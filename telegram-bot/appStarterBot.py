import os
import time
import threading
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from supabase import create_client, Client

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("–û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è—Ö")

SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")
if not SUPABASE_URL or not SUPABASE_KEY:
    raise ValueError("–û—à–∏–±–∫–∞: SUPABASE_URL –∏ SUPABASE_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è—Ö")

WEBAPP_URL = os.getenv("WEBAPP_URL", "https://frontend-nine-sigma-49.vercel.app/")

supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)
bot = telebot.TeleBot(BOT_TOKEN)

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@bot.message_handler(commands=['start'])
def send_welcome(message):
    user = message.from_user
    args = message.text.split()
    ref_id = args[1] if len(args) > 1 else None

    print(f"üü¢ /start –æ—Ç {user.id} ({user.username}) | ref_id: {ref_id}")

    url = WEBAPP_URL
    if ref_id and str(user.id) != str(ref_id):
        url += f"?referrer={ref_id}&tgWebAppExpand=true"
    else:
        url += "?tgWebAppExpand=true"

    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton(
            "üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
            web_app=WebAppInfo(url=url)
        )
    )

    bot.send_message(
        message.chat.id,
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name or '–¥—Ä—É–≥'}! üëã\n–ó–∞–ø—É—Å—Ç–∏ Mini App –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:",
        reply_markup=keyboard
    )

# --- –§–æ–Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫: –æ–ø–æ–≤–µ—â–µ–Ω–∏—è ---
def notify_users_loop():
    while True:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª—ë—Å–∞, –∫–æ—Ç–æ—Ä—ã–µ —Å–∫–æ—Ä–æ –Ω–∞—á–Ω—É—Ç—Å—è, –Ω–æ –µ—â—ë –Ω–µ –±—ã–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã
            response = supabase.table('wheels').select('*') \
                .eq('status', 'completed').eq('notified', False).execute()

            wheels = response.data if response.data else []

            for wheel in wheels:
                wheel_id = wheel['id']
                nft_name = wheel.get('nft_name', 'prize')

                # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —ç—Ç–æ–≥–æ –∫–æ–ª–µ—Å–∞
                participants_response = supabase.table('wheel_participants') \
                    .select('telegram_id, username') \
                    .eq('wheel_id', wheel_id).execute()

                participants = participants_response.data if participants_response.data else []

                for user in participants:
                    telegram_id = user['telegram_id']
                    username = user.get('username', 'Player')

                    try:
                        keyboard = InlineKeyboardMarkup()
                        keyboard.add(
                            InlineKeyboardButton(
                                "üéØ –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–æ–∑—ã–≥—Ä—ã—à—É",
                                url=f"{WEBAPP_URL}/wheel/{wheel_id}"
                            )
                        )

                        bot.send_message(
                            telegram_id,
                            f"{username}! Your game for a prize {nft_name} will start in 1 minute! üéÅ",
                            reply_markup=keyboard
                        )
                        print(f"üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id}")
                    except Exception as e:
                        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {telegram_id}: {e}")

                # –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã
                supabase.table('wheels').update({'notified': True}).eq('id', wheel_id).execute()

        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ –≤ –ø–æ—Ç–æ–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:", e)

        time.sleep(10)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥

# --- –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –∏ –±–æ—Ç–∞ ---
if __name__ == "__main__":
    print("üöÄ AppStarterBot –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç /start")

    # –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    threading.Thread(target=notify_users_loop, daemon=True).start()

    # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –±–æ—Ç–∞
    bot.infinity_polling()
