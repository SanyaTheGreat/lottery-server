import os
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from supabase import create_client, Client

# üîê –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("–û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# ‚úÖ –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ Supabase –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")

if not SUPABASE_URL or not SUPABASE_KEY:
    raise ValueError("–û—à–∏–±–∫–∞: SUPABASE_URL –∏ SUPABASE_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# üåê –°—Å—ã–ª–∫–∞ –Ω–∞ Mini App (frontend –Ω–∞ Vercel)
WEBAPP_URL = os.getenv("WEBAPP_URL", "https://frontend-nine-sigma-49.vercel.app/")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Supabase –∏ –±–æ—Ç–∞
supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)
bot = telebot.TeleBot(BOT_TOKEN)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    user = message.from_user
    args = message.text.split()
    ref_id = args[1] if len(args) > 1 else None

    print(f"üü¢ /start –æ—Ç {user.id} ({user.username}) | ref_id: {ref_id}")

    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω ref_id –∏ –æ–Ω –Ω–µ —Ä–∞–≤–µ–Ω —Å–µ–±–µ
    if ref_id and str(user.id) != str(ref_id):
        try:
            existing = supabase.from_('users').select('id, referred_by').eq('telegram_id', user.id).single().execute()

            if existing.data and existing.data['referred_by'] is None:
                ref = supabase.from_('users').select('id').eq('telegram_id', ref_id).single().execute()

                if ref.data:
                    supabase.from_('users').update({'referred_by': ref.data['id']}).eq('telegram_id', user.id).execute()
                    print(f"‚úÖ –ü—Ä–∏–≤—è–∑–∫–∞ —É—Å–ø–µ—à–Ω–∞: {user.id} ‚Üí {ref_id}")
                else:
                    print(f"‚ö†Ô∏è –†–µ—Ñ–µ—Ä–µ—Ä —Å ID {ref_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            else:
                print("‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–º–µ–µ—Ç referred_by –∏–ª–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {e}")

    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton(
            "üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
            web_app=WebAppInfo(url=WEBAPP_URL + "?tgWebAppExpand=true")  # –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–∞—Å—Ç–æ–º–Ω—ã–π
        )
    )

    bot.send_message(
        message.chat.id,
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name or '–¥—Ä—É–≥'}! üëã\n–ó–∞–ø—É—Å—Ç–∏ Mini App –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:",
        reply_markup=keyboard
    )

if __name__ == "__main__":
    print("üöÄ AppStarterBot –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç /start")
    bot.infinity_polling()
