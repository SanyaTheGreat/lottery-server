# case_scanner.py
import os
import asyncio
from datetime import datetime
from uuid import uuid4

from pyrogram import Client
from pyrogram.enums import MessageServiceType
from supabase import create_client, Client as SupabaseClient

# --- Telegram auth (user session, not bot) ---
api_id = 20572626
api_hash = "e0a03ec5b69ed82bc7344630fdf7ca2a"
session_name = "storagescan_v2"  # –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏, –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å

# –ß–∞—Ç-–∏—Å—Ç–æ—á–Ω–∏–∫ –ø–æ–¥–∞—Ä–∫–æ–≤ (–≤—Ç–æ—Ä–æ–π –∞–∫–∫–∞—É–Ω—Ç)
SECOND_USER_ID = "giftrelayer"       # –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ username, –Ω–∞–ø—Ä–∏–º–µ—Ä "fightforgift"

# --- Supabase ---
SUPABASE_URL = os.getenv("SUPABASE_URL", "https://djpcftyqkwucbksknsdu.supabase.co")
SUPABASE_KEY = os.getenv("SUPABASE_KEY", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRqcGNmdHlxa3d1Y2Jrc2tuc2R1Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NDY3MTg4MiwiZXhwIjoyMDYwMjQ3ODgyfQ.oSMAenP7WqL19Fl8fhwx7WfwKMG4us-KQ6d_XbpIJSw")
supabase: SupabaseClient = create_client(SUPABASE_URL, SUPABASE_KEY)

TABLE = "slot_gifts"
SCAN_LIMIT = 4  # —Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞—Ç—å


async def ensure_peer(app: Client, peer):
    """
    –ü—Ä–æ–≥—Ä–µ–≤–∞–µ–º peer, —á—Ç–æ–±—ã Pyrogram –∑–∞–ø–∏—Å–∞–ª –µ–≥–æ –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –ë–î —Å–µ—Å—Å–∏–∏.
    –≠—Ç–æ —É—Å—Ç—Ä–∞–Ω—è–µ—Ç –æ—à–∏–±–∫—É 'ID not found: {peer_id}' –≤ get_chat_history.
    """
    try:
        await app.get_users(peer)
    except Exception:
        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ user_id, –∞ —É–∂–µ username ‚Äî get_users —Ç–æ–∂–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç.
        pass
    try:
        await app.get_chat(peer)
    except Exception:
        pass


async def scan_gifts_from_chat():
    app = Client(session_name, api_id, api_hash)
    await app.start()
    print("üöÄ –°–∫–∞–Ω–µ—Ä –ø–æ–¥–∞—Ä–∫–æ–≤ –∑–∞–ø—É—â–µ–Ω")

    # –ø—Ä–æ–≥—Ä–µ–≤–∞–µ–º peer, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å ID not found
    await ensure_peer(app, SECOND_USER_ID)

    added, skipped = 0, 0

    async for msg in app.get_chat_history(chat_id=SECOND_USER_ID, limit=SCAN_LIMIT):
        # –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç —Ç–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–¥–∞—Ä–∫–∞–º–∏
        if msg.service != MessageServiceType.GIFT:
            continue
        gift = getattr(msg, "gift", None)
        if not gift:
            continue

        nft_number = gift.id
        slug = gift.name or ""           # –∫–ª—é—á –¥–ª—è –∫–µ–π—Å–æ–≤
        nft_name = gift.title or ""
        transfer_stars = getattr(gift, "transfer_price", None)
        link = f"https://t.me/nft/{slug}" if slug else None
        msg_id = msg.id

        # –∞–Ω—Ç–∏–¥—É–±–ª—å: –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –∑–∞–ø–∏—Å—å —Å —Ç–µ–º –∂–µ nft_number –∏ used=false ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        try:
            existing = supabase.table(TABLE)\
                .select("nft_number, used")\
                .eq("nft_number", nft_number)\
                .execute()

            if existing.data and any(not row.get("used") for row in existing.data):
                skipped += 1
                print(f"‚õî {nft_number} —É–∂–µ –µ—Å—Ç—å –∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫")
                continue
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—É–±–ª—è {nft_number}: {e}")
            continue  # –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å, —á–µ–º –∑–∞–¥–≤–æ–∏—Ç—å

        insert_data = {
            "pending_id": str(uuid4()),
            "nft_number": nft_number,
            "msg_id": msg_id,
            "slug": slug,
            "nft_name": nft_name,
            "transfer_stars": transfer_stars,
            "link": link,
            "used": False,
            "created_at": datetime.utcnow().isoformat()
        }

        try:
            supabase.table(TABLE).insert(insert_data).execute()
            added += 1
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω {nft_number} ‚Äî '{nft_name}' (msg_id={msg_id})")
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—Å—Ç–∞–≤–∏—Ç—å {nft_number}: {e}")

    await app.stop()
    print(f"üèÅ –°–∫–∞–Ω –∑–∞–≤–µ—Ä—à—ë–Ω. –î–æ–±–∞–≤–ª–µ–Ω–æ: {added}, –ø—Ä–æ–ø—É—â–µ–Ω–æ: {skipped}")


if __name__ == "__main__":
    asyncio.run(scan_gifts_from_chat())
